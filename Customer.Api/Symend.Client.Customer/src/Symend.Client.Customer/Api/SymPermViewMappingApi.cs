/*
 * Customer Service API
 *
 * API for Customer Domain Operations
 *
 * The version of the OpenAPI document: v1
 * Contact: support@symend.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Net;
using System.Net.Mime;
using Symend.Client.Customer.Client;
using Symend.Client.Customer.Model;

namespace Symend.Client.Customer.Api
{

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface ISymPermViewMappingApiSync : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// Get Customer Trail options
        /// </summary>
        /// <remarks>
        /// Get Customer Trail Options- Account Search Options (Search for a Customer Account by AccountId, AccountKey, Email, Phone) and Event Category Options (accountUpdates, emailActivities etc.).
        /// </remarks>
        /// <exception cref="Symend.Client.Customer.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xSymOrganizationId">Organization UUID of the client making the request</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>CustomerTrailOptionModel</returns>
        CustomerTrailOptionModel GetCustomerTrailOptions(Guid xSymOrganizationId, int operationIndex = 0);

        /// <summary>
        /// Get Customer Trail options
        /// </summary>
        /// <remarks>
        /// Get Customer Trail Options- Account Search Options (Search for a Customer Account by AccountId, AccountKey, Email, Phone) and Event Category Options (accountUpdates, emailActivities etc.).
        /// </remarks>
        /// <exception cref="Symend.Client.Customer.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xSymOrganizationId">Organization UUID of the client making the request</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of CustomerTrailOptionModel</returns>
        ApiResponse<CustomerTrailOptionModel> GetCustomerTrailOptionsWithHttpInfo(Guid xSymOrganizationId, int operationIndex = 0);
        /// <summary>
        /// GET Customer Trail event types
        /// </summary>
        /// <remarks>
        /// Lists all customer trail event types, including their associated attribute types.
        /// </remarks>
        /// <exception cref="Symend.Client.Customer.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>CustomerTrailEventTypeCollectionModel</returns>
        CustomerTrailEventTypeCollectionModel ListCustomerTrailEventTypes(int operationIndex = 0);

        /// <summary>
        /// GET Customer Trail event types
        /// </summary>
        /// <remarks>
        /// Lists all customer trail event types, including their associated attribute types.
        /// </remarks>
        /// <exception cref="Symend.Client.Customer.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of CustomerTrailEventTypeCollectionModel</returns>
        ApiResponse<CustomerTrailEventTypeCollectionModel> ListCustomerTrailEventTypesWithHttpInfo(int operationIndex = 0);
        #endregion Synchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface ISymPermViewMappingApiAsync : IApiAccessor
    {
        #region Asynchronous Operations
        /// <summary>
        /// Get Customer Trail options
        /// </summary>
        /// <remarks>
        /// Get Customer Trail Options- Account Search Options (Search for a Customer Account by AccountId, AccountKey, Email, Phone) and Event Category Options (accountUpdates, emailActivities etc.).
        /// </remarks>
        /// <exception cref="Symend.Client.Customer.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xSymOrganizationId">Organization UUID of the client making the request</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of CustomerTrailOptionModel</returns>
        System.Threading.Tasks.Task<CustomerTrailOptionModel> GetCustomerTrailOptionsAsync(Guid xSymOrganizationId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Get Customer Trail options
        /// </summary>
        /// <remarks>
        /// Get Customer Trail Options- Account Search Options (Search for a Customer Account by AccountId, AccountKey, Email, Phone) and Event Category Options (accountUpdates, emailActivities etc.).
        /// </remarks>
        /// <exception cref="Symend.Client.Customer.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xSymOrganizationId">Organization UUID of the client making the request</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (CustomerTrailOptionModel)</returns>
        System.Threading.Tasks.Task<ApiResponse<CustomerTrailOptionModel>> GetCustomerTrailOptionsWithHttpInfoAsync(Guid xSymOrganizationId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// GET Customer Trail event types
        /// </summary>
        /// <remarks>
        /// Lists all customer trail event types, including their associated attribute types.
        /// </remarks>
        /// <exception cref="Symend.Client.Customer.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of CustomerTrailEventTypeCollectionModel</returns>
        System.Threading.Tasks.Task<CustomerTrailEventTypeCollectionModel> ListCustomerTrailEventTypesAsync(int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// GET Customer Trail event types
        /// </summary>
        /// <remarks>
        /// Lists all customer trail event types, including their associated attribute types.
        /// </remarks>
        /// <exception cref="Symend.Client.Customer.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (CustomerTrailEventTypeCollectionModel)</returns>
        System.Threading.Tasks.Task<ApiResponse<CustomerTrailEventTypeCollectionModel>> ListCustomerTrailEventTypesWithHttpInfoAsync(int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface ISymPermViewMappingApi : ISymPermViewMappingApiSync, ISymPermViewMappingApiAsync
    {

    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class SymPermViewMappingApi : ISymPermViewMappingApi
    {
        private Symend.Client.Customer.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="SymPermViewMappingApi"/> class.
        /// </summary>
        /// <returns></returns>
        public SymPermViewMappingApi() : this((string)null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="SymPermViewMappingApi"/> class.
        /// </summary>
        /// <returns></returns>
        public SymPermViewMappingApi(string basePath)
        {
            this.Configuration = Symend.Client.Customer.Client.Configuration.MergeConfigurations(
                Symend.Client.Customer.Client.GlobalConfiguration.Instance,
                new Symend.Client.Customer.Client.Configuration { BasePath = basePath }
            );
            this.Client = new Symend.Client.Customer.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new Symend.Client.Customer.Client.ApiClient(this.Configuration.BasePath);
            this.ExceptionFactory = Symend.Client.Customer.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="SymPermViewMappingApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public SymPermViewMappingApi(Symend.Client.Customer.Client.Configuration configuration)
        {
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Configuration = Symend.Client.Customer.Client.Configuration.MergeConfigurations(
                Symend.Client.Customer.Client.GlobalConfiguration.Instance,
                configuration
            );
            this.Client = new Symend.Client.Customer.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new Symend.Client.Customer.Client.ApiClient(this.Configuration.BasePath);
            ExceptionFactory = Symend.Client.Customer.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="SymPermViewMappingApi"/> class
        /// using a Configuration object and client instance.
        /// </summary>
        /// <param name="client">The client interface for synchronous API access.</param>
        /// <param name="asyncClient">The client interface for asynchronous API access.</param>
        /// <param name="configuration">The configuration object.</param>
        public SymPermViewMappingApi(Symend.Client.Customer.Client.ISynchronousClient client, Symend.Client.Customer.Client.IAsynchronousClient asyncClient, Symend.Client.Customer.Client.IReadableConfiguration configuration)
        {
            if (client == null) throw new ArgumentNullException("client");
            if (asyncClient == null) throw new ArgumentNullException("asyncClient");
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Client = client;
            this.AsynchronousClient = asyncClient;
            this.Configuration = configuration;
            this.ExceptionFactory = Symend.Client.Customer.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// The client for accessing this underlying API asynchronously.
        /// </summary>
        public Symend.Client.Customer.Client.IAsynchronousClient AsynchronousClient { get; set; }

        /// <summary>
        /// The client for accessing this underlying API synchronously.
        /// </summary>
        public Symend.Client.Customer.Client.ISynchronousClient Client { get; set; }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public string GetBasePath()
        {
            return this.Configuration.BasePath;
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public Symend.Client.Customer.Client.IReadableConfiguration Configuration { get; set; }

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public Symend.Client.Customer.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        /// Get Customer Trail options Get Customer Trail Options- Account Search Options (Search for a Customer Account by AccountId, AccountKey, Email, Phone) and Event Category Options (accountUpdates, emailActivities etc.).
        /// </summary>
        /// <exception cref="Symend.Client.Customer.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xSymOrganizationId">Organization UUID of the client making the request</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>CustomerTrailOptionModel</returns>
        public CustomerTrailOptionModel GetCustomerTrailOptions(Guid xSymOrganizationId, int operationIndex = 0)
        {
            Symend.Client.Customer.Client.ApiResponse<CustomerTrailOptionModel> localVarResponse = GetCustomerTrailOptionsWithHttpInfo(xSymOrganizationId);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Get Customer Trail options Get Customer Trail Options- Account Search Options (Search for a Customer Account by AccountId, AccountKey, Email, Phone) and Event Category Options (accountUpdates, emailActivities etc.).
        /// </summary>
        /// <exception cref="Symend.Client.Customer.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xSymOrganizationId">Organization UUID of the client making the request</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of CustomerTrailOptionModel</returns>
        public Symend.Client.Customer.Client.ApiResponse<CustomerTrailOptionModel> GetCustomerTrailOptionsWithHttpInfo(Guid xSymOrganizationId, int operationIndex = 0)
        {
            Symend.Client.Customer.Client.RequestOptions localVarRequestOptions = new Symend.Client.Customer.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Symend.Client.Customer.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Symend.Client.Customer.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.HeaderParameters.Add("X-Sym-OrganizationId", Symend.Client.Customer.Client.ClientUtils.ParameterToString(xSymOrganizationId)); // header parameter

            localVarRequestOptions.Operation = "SymPermViewMappingApi.GetCustomerTrailOptions";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (JSON_Web_Token) required
            // bearer authentication required
            if (!string.IsNullOrEmpty(this.Configuration.AccessToken) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // make the HTTP request
            var localVarResponse = this.Client.Get<CustomerTrailOptionModel>("/v1/customer-trail-options", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetCustomerTrailOptions", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Get Customer Trail options Get Customer Trail Options- Account Search Options (Search for a Customer Account by AccountId, AccountKey, Email, Phone) and Event Category Options (accountUpdates, emailActivities etc.).
        /// </summary>
        /// <exception cref="Symend.Client.Customer.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xSymOrganizationId">Organization UUID of the client making the request</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of CustomerTrailOptionModel</returns>
        public async System.Threading.Tasks.Task<CustomerTrailOptionModel> GetCustomerTrailOptionsAsync(Guid xSymOrganizationId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Symend.Client.Customer.Client.ApiResponse<CustomerTrailOptionModel> localVarResponse = await GetCustomerTrailOptionsWithHttpInfoAsync(xSymOrganizationId, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Get Customer Trail options Get Customer Trail Options- Account Search Options (Search for a Customer Account by AccountId, AccountKey, Email, Phone) and Event Category Options (accountUpdates, emailActivities etc.).
        /// </summary>
        /// <exception cref="Symend.Client.Customer.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xSymOrganizationId">Organization UUID of the client making the request</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (CustomerTrailOptionModel)</returns>
        public async System.Threading.Tasks.Task<Symend.Client.Customer.Client.ApiResponse<CustomerTrailOptionModel>> GetCustomerTrailOptionsWithHttpInfoAsync(Guid xSymOrganizationId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Symend.Client.Customer.Client.RequestOptions localVarRequestOptions = new Symend.Client.Customer.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Symend.Client.Customer.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Symend.Client.Customer.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.HeaderParameters.Add("X-Sym-OrganizationId", Symend.Client.Customer.Client.ClientUtils.ParameterToString(xSymOrganizationId)); // header parameter

            localVarRequestOptions.Operation = "SymPermViewMappingApi.GetCustomerTrailOptions";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (JSON_Web_Token) required
            // bearer authentication required
            if (!string.IsNullOrEmpty(this.Configuration.AccessToken) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<CustomerTrailOptionModel>("/v1/customer-trail-options", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetCustomerTrailOptions", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// GET Customer Trail event types Lists all customer trail event types, including their associated attribute types.
        /// </summary>
        /// <exception cref="Symend.Client.Customer.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>CustomerTrailEventTypeCollectionModel</returns>
        public CustomerTrailEventTypeCollectionModel ListCustomerTrailEventTypes(int operationIndex = 0)
        {
            Symend.Client.Customer.Client.ApiResponse<CustomerTrailEventTypeCollectionModel> localVarResponse = ListCustomerTrailEventTypesWithHttpInfo();
            return localVarResponse.Data;
        }

        /// <summary>
        /// GET Customer Trail event types Lists all customer trail event types, including their associated attribute types.
        /// </summary>
        /// <exception cref="Symend.Client.Customer.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of CustomerTrailEventTypeCollectionModel</returns>
        public Symend.Client.Customer.Client.ApiResponse<CustomerTrailEventTypeCollectionModel> ListCustomerTrailEventTypesWithHttpInfo(int operationIndex = 0)
        {
            Symend.Client.Customer.Client.RequestOptions localVarRequestOptions = new Symend.Client.Customer.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Symend.Client.Customer.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Symend.Client.Customer.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }


            localVarRequestOptions.Operation = "SymPermViewMappingApi.ListCustomerTrailEventTypes";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (JSON_Web_Token) required
            // bearer authentication required
            if (!string.IsNullOrEmpty(this.Configuration.AccessToken) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // make the HTTP request
            var localVarResponse = this.Client.Get<CustomerTrailEventTypeCollectionModel>("/v1/customer-trail-event-types", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ListCustomerTrailEventTypes", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// GET Customer Trail event types Lists all customer trail event types, including their associated attribute types.
        /// </summary>
        /// <exception cref="Symend.Client.Customer.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of CustomerTrailEventTypeCollectionModel</returns>
        public async System.Threading.Tasks.Task<CustomerTrailEventTypeCollectionModel> ListCustomerTrailEventTypesAsync(int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Symend.Client.Customer.Client.ApiResponse<CustomerTrailEventTypeCollectionModel> localVarResponse = await ListCustomerTrailEventTypesWithHttpInfoAsync(operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// GET Customer Trail event types Lists all customer trail event types, including their associated attribute types.
        /// </summary>
        /// <exception cref="Symend.Client.Customer.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (CustomerTrailEventTypeCollectionModel)</returns>
        public async System.Threading.Tasks.Task<Symend.Client.Customer.Client.ApiResponse<CustomerTrailEventTypeCollectionModel>> ListCustomerTrailEventTypesWithHttpInfoAsync(int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Symend.Client.Customer.Client.RequestOptions localVarRequestOptions = new Symend.Client.Customer.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Symend.Client.Customer.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Symend.Client.Customer.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }


            localVarRequestOptions.Operation = "SymPermViewMappingApi.ListCustomerTrailEventTypes";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (JSON_Web_Token) required
            // bearer authentication required
            if (!string.IsNullOrEmpty(this.Configuration.AccessToken) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<CustomerTrailEventTypeCollectionModel>("/v1/customer-trail-event-types", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ListCustomerTrailEventTypes", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

    }
}
